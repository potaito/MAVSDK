// WARNING: THIS FILE IS AUTOGENERATED! As such, it should not be edited.
// Edits need to be made to the proto files
// (see https://github.com/mavlink/MAVSDK-Proto/blob/main/protos/precision_target/precision_target.proto)

#pragma once

#include <array>
#include <cmath>
#include <functional>
#include <limits>
#include <memory>
#include <string>
#include <utility>
#include <vector>


#include "plugin_base.h"

#include "handle.h"

namespace mavsdk {


class System;class PrecisionTargetImpl;

/**
 * @brief Allows developers to stream the position of a precision target for the drone to land on.
 */
class PrecisionTarget : public PluginBase {
public:

    /**
     * @brief Constructor. Creates the plugin for a specific System.
     *
     * The plugin is typically created as shown below:
     *
     *     ```cpp
     *     auto precision_target = PrecisionTarget(system);
     *     ```
     *
     * @param system The specific system associated with this plugin.
     */
    explicit PrecisionTarget(System& system); // deprecated

    /**
     * @brief Constructor. Creates the plugin for a specific System.
     *
     * The plugin is typically created as shown below:
     *
     *     ```cpp
     *     auto precision_target = PrecisionTarget(system);
     *     ```
     *
     * @param system The specific system associated with this plugin.
     */
    explicit PrecisionTarget(std::shared_ptr<System> system); // new


    /**
     * @brief Destructor (internal use only).
     */
    ~PrecisionTarget() override;





    /**
     * @brief Position type in sensor frame coordinates
     */
    struct PositionLocal {
        
        float x{}; /**< @brief Coordinate of precision target */
        float y{}; /**< @brief Coordinate of precision target */
        float z{}; /**< @brief Coordinate of precision target */
    };

    /**
     * @brief Equal operator to compare two `PrecisionTarget::PositionLocal` objects.
     *
     * @return `true` if items are equal.
     */
    friend bool operator==(const PrecisionTarget::PositionLocal& lhs, const PrecisionTarget::PositionLocal& rhs);

    /**
     * @brief Stream operator to print information about a `PrecisionTarget::PositionLocal`.
     *
     * @return A reference to the stream.
     */
    friend std::ostream& operator<<(std::ostream& str, PrecisionTarget::PositionLocal const& position_local);





    /**
     * @brief Possible results returned for PrecisionTarget publish requests.
     */
    enum class Result {
        Unknown, /**< @brief Unknown result. */
        Success, /**< @brief Success. */
        NoSystem, /**< @brief No system is connected. */
    };

    /**
     * @brief Stream operator to print information about a `PrecisionTarget::Result`.
     *
     * @return A reference to the stream.
     */
    friend std::ostream& operator<<(std::ostream& str, PrecisionTarget::Result const& result);



    /**
     * @brief Callback type for asynchronous PrecisionTarget calls.
     */
    using ResultCallback = std::function<void(Result)>;






    /**
     * @brief Publish precision target measurement recorded by a sensor onboard the drone
     *
     * This function is blocking.
     *
     * @return Result of request.
     */
    Result publish_position_relative(PositionLocal position_local) const;




    /**
     * @brief Copy constructor.
     */
    PrecisionTarget(const PrecisionTarget& other);

    /**
     * @brief Equality operator (object is not copyable).
     */
    const PrecisionTarget& operator=(const PrecisionTarget&) = delete;

private:
    /** @private Underlying implementation, set at instantiation */
    std::unique_ptr<PrecisionTargetImpl> _impl;
};

} // namespace mavsdk