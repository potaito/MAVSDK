// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: landing_target/landing_target.proto

#include "landing_target/landing_target.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mavsdk {
namespace rpc {
namespace landing_target {
PROTOBUF_CONSTEXPR PositionLocal::PositionLocal(
    ::_pbi::ConstantInitialized)
  : x_(0)
  , y_(0)
  , z_(0){}
struct PositionLocalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionLocalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionLocalDefaultTypeInternal() {}
  union {
    PositionLocal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionLocalDefaultTypeInternal _PositionLocal_default_instance_;
PROTOBUF_CONSTEXPR PublishPositionRelativeRequest::PublishPositionRelativeRequest(
    ::_pbi::ConstantInitialized)
  : position_local_(nullptr){}
struct PublishPositionRelativeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishPositionRelativeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishPositionRelativeRequestDefaultTypeInternal() {}
  union {
    PublishPositionRelativeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishPositionRelativeRequestDefaultTypeInternal _PublishPositionRelativeRequest_default_instance_;
PROTOBUF_CONSTEXPR PublishPositionRelativeResponse::PublishPositionRelativeResponse(
    ::_pbi::ConstantInitialized)
  : landing_target_result_(nullptr){}
struct PublishPositionRelativeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishPositionRelativeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishPositionRelativeResponseDefaultTypeInternal() {}
  union {
    PublishPositionRelativeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishPositionRelativeResponseDefaultTypeInternal _PublishPositionRelativeResponse_default_instance_;
PROTOBUF_CONSTEXPR LandingTargetResult::LandingTargetResult(
    ::_pbi::ConstantInitialized)
  : result_str_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , result_(0)
{}
struct LandingTargetResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LandingTargetResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LandingTargetResultDefaultTypeInternal() {}
  union {
    LandingTargetResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LandingTargetResultDefaultTypeInternal _LandingTargetResult_default_instance_;
}  // namespace landing_target
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_landing_5ftarget_2flanding_5ftarget_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_landing_5ftarget_2flanding_5ftarget_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_landing_5ftarget_2flanding_5ftarget_2eproto = nullptr;

const uint32_t TableStruct_landing_5ftarget_2flanding_5ftarget_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::PositionLocal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::PositionLocal, x_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::PositionLocal, y_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::PositionLocal, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::PublishPositionRelativeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::PublishPositionRelativeRequest, position_local_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::PublishPositionRelativeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::PublishPositionRelativeResponse, landing_target_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::LandingTargetResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::LandingTargetResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::landing_target::LandingTargetResult, result_str_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mavsdk::rpc::landing_target::PositionLocal)},
  { 9, -1, -1, sizeof(::mavsdk::rpc::landing_target::PublishPositionRelativeRequest)},
  { 16, -1, -1, sizeof(::mavsdk::rpc::landing_target::PublishPositionRelativeResponse)},
  { 23, -1, -1, sizeof(::mavsdk::rpc::landing_target::LandingTargetResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mavsdk::rpc::landing_target::_PositionLocal_default_instance_._instance,
  &::mavsdk::rpc::landing_target::_PublishPositionRelativeRequest_default_instance_._instance,
  &::mavsdk::rpc::landing_target::_PublishPositionRelativeResponse_default_instance_._instance,
  &::mavsdk::rpc::landing_target::_LandingTargetResult_default_instance_._instance,
};

const char descriptor_table_protodef_landing_5ftarget_2flanding_5ftarget_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#landing_target/landing_target.proto\022\031m"
  "avsdk.rpc.landing_target\032\024mavsdk_options"
  ".proto\"0\n\rPositionLocal\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030"
  "\002 \001(\002\022\t\n\001z\030\003 \001(\002\"b\n\036PublishPositionRelat"
  "iveRequest\022@\n\016position_local\030\001 \001(\0132(.mav"
  "sdk.rpc.landing_target.PositionLocal\"p\n\037"
  "PublishPositionRelativeResponse\022M\n\025landi"
  "ng_target_result\030\001 \001(\0132..mavsdk.rpc.land"
  "ing_target.LandingTargetResult\"\270\001\n\023Landi"
  "ngTargetResult\022E\n\006result\030\001 \001(\01625.mavsdk."
  "rpc.landing_target.LandingTargetResult.R"
  "esult\022\022\n\nresult_str\030\002 \001(\t\"F\n\006Result\022\022\n\016R"
  "ESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\024\n\020R"
  "ESULT_NO_SYSTEM\020\0022\257\001\n\024LandingTargetServi"
  "ce\022\226\001\n\027PublishPositionRelative\0229.mavsdk."
  "rpc.landing_target.PublishPositionRelati"
  "veRequest\032:.mavsdk.rpc.landing_target.Pu"
  "blishPositionRelativeResponse\"\004\200\265\030\001B.\n\030i"
  "o.mavsdk.landing_targetB\022LandingTargetPr"
  "otob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_deps[1] = {
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::_pbi::once_flag descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto = {
    false, false, 771, descriptor_table_protodef_landing_5ftarget_2flanding_5ftarget_2eproto,
    "landing_target/landing_target.proto",
    &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_once, descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_landing_5ftarget_2flanding_5ftarget_2eproto::offsets,
    file_level_metadata_landing_5ftarget_2flanding_5ftarget_2eproto, file_level_enum_descriptors_landing_5ftarget_2flanding_5ftarget_2eproto,
    file_level_service_descriptors_landing_5ftarget_2flanding_5ftarget_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_getter() {
  return &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_landing_5ftarget_2flanding_5ftarget_2eproto(&descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto);
namespace mavsdk {
namespace rpc {
namespace landing_target {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LandingTargetResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto);
  return file_level_enum_descriptors_landing_5ftarget_2flanding_5ftarget_2eproto[0];
}
bool LandingTargetResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr LandingTargetResult_Result LandingTargetResult::RESULT_UNKNOWN;
constexpr LandingTargetResult_Result LandingTargetResult::RESULT_SUCCESS;
constexpr LandingTargetResult_Result LandingTargetResult::RESULT_NO_SYSTEM;
constexpr LandingTargetResult_Result LandingTargetResult::Result_MIN;
constexpr LandingTargetResult_Result LandingTargetResult::Result_MAX;
constexpr int LandingTargetResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class PositionLocal::_Internal {
 public:
};

PositionLocal::PositionLocal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.landing_target.PositionLocal)
}
PositionLocal::PositionLocal(const PositionLocal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.landing_target.PositionLocal)
}

inline void PositionLocal::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

PositionLocal::~PositionLocal() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.landing_target.PositionLocal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PositionLocal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PositionLocal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PositionLocal::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.landing_target.PositionLocal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PositionLocal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PositionLocal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.landing_target.PositionLocal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.landing_target.PositionLocal)
  return target;
}

size_t PositionLocal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.landing_target.PositionLocal)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PositionLocal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PositionLocal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PositionLocal::GetClassData() const { return &_class_data_; }

void PositionLocal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PositionLocal *>(to)->MergeFrom(
      static_cast<const PositionLocal &>(from));
}


void PositionLocal::MergeFrom(const PositionLocal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.landing_target.PositionLocal)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _internal_set_x(from._internal_x());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _internal_set_y(from._internal_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _internal_set_z(from._internal_z());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PositionLocal::CopyFrom(const PositionLocal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.landing_target.PositionLocal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionLocal::IsInitialized() const {
  return true;
}

void PositionLocal::InternalSwap(PositionLocal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionLocal, z_)
      + sizeof(PositionLocal::z_)
      - PROTOBUF_FIELD_OFFSET(PositionLocal, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PositionLocal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_getter, &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_once,
      file_level_metadata_landing_5ftarget_2flanding_5ftarget_2eproto[0]);
}

// ===================================================================

class PublishPositionRelativeRequest::_Internal {
 public:
  static const ::mavsdk::rpc::landing_target::PositionLocal& position_local(const PublishPositionRelativeRequest* msg);
};

const ::mavsdk::rpc::landing_target::PositionLocal&
PublishPositionRelativeRequest::_Internal::position_local(const PublishPositionRelativeRequest* msg) {
  return *msg->position_local_;
}
PublishPositionRelativeRequest::PublishPositionRelativeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
}
PublishPositionRelativeRequest::PublishPositionRelativeRequest(const PublishPositionRelativeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position_local()) {
    position_local_ = new ::mavsdk::rpc::landing_target::PositionLocal(*from.position_local_);
  } else {
    position_local_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
}

inline void PublishPositionRelativeRequest::SharedCtor() {
position_local_ = nullptr;
}

PublishPositionRelativeRequest::~PublishPositionRelativeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PublishPositionRelativeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete position_local_;
}

void PublishPositionRelativeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PublishPositionRelativeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && position_local_ != nullptr) {
    delete position_local_;
  }
  position_local_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublishPositionRelativeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.landing_target.PositionLocal position_local = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position_local(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PublishPositionRelativeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.landing_target.PositionLocal position_local = 1;
  if (this->_internal_has_position_local()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::position_local(this),
        _Internal::position_local(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
  return target;
}

size_t PublishPositionRelativeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.landing_target.PositionLocal position_local = 1;
  if (this->_internal_has_position_local()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_local_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PublishPositionRelativeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PublishPositionRelativeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PublishPositionRelativeRequest::GetClassData() const { return &_class_data_; }

void PublishPositionRelativeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PublishPositionRelativeRequest *>(to)->MergeFrom(
      static_cast<const PublishPositionRelativeRequest &>(from));
}


void PublishPositionRelativeRequest::MergeFrom(const PublishPositionRelativeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_position_local()) {
    _internal_mutable_position_local()->::mavsdk::rpc::landing_target::PositionLocal::MergeFrom(from._internal_position_local());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PublishPositionRelativeRequest::CopyFrom(const PublishPositionRelativeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.landing_target.PublishPositionRelativeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishPositionRelativeRequest::IsInitialized() const {
  return true;
}

void PublishPositionRelativeRequest::InternalSwap(PublishPositionRelativeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(position_local_, other->position_local_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PublishPositionRelativeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_getter, &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_once,
      file_level_metadata_landing_5ftarget_2flanding_5ftarget_2eproto[1]);
}

// ===================================================================

class PublishPositionRelativeResponse::_Internal {
 public:
  static const ::mavsdk::rpc::landing_target::LandingTargetResult& landing_target_result(const PublishPositionRelativeResponse* msg);
};

const ::mavsdk::rpc::landing_target::LandingTargetResult&
PublishPositionRelativeResponse::_Internal::landing_target_result(const PublishPositionRelativeResponse* msg) {
  return *msg->landing_target_result_;
}
PublishPositionRelativeResponse::PublishPositionRelativeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
}
PublishPositionRelativeResponse::PublishPositionRelativeResponse(const PublishPositionRelativeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_landing_target_result()) {
    landing_target_result_ = new ::mavsdk::rpc::landing_target::LandingTargetResult(*from.landing_target_result_);
  } else {
    landing_target_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
}

inline void PublishPositionRelativeResponse::SharedCtor() {
landing_target_result_ = nullptr;
}

PublishPositionRelativeResponse::~PublishPositionRelativeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PublishPositionRelativeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete landing_target_result_;
}

void PublishPositionRelativeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PublishPositionRelativeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && landing_target_result_ != nullptr) {
    delete landing_target_result_;
  }
  landing_target_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublishPositionRelativeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.landing_target.LandingTargetResult landing_target_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_landing_target_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PublishPositionRelativeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.landing_target.LandingTargetResult landing_target_result = 1;
  if (this->_internal_has_landing_target_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::landing_target_result(this),
        _Internal::landing_target_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
  return target;
}

size_t PublishPositionRelativeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.landing_target.LandingTargetResult landing_target_result = 1;
  if (this->_internal_has_landing_target_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *landing_target_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PublishPositionRelativeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PublishPositionRelativeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PublishPositionRelativeResponse::GetClassData() const { return &_class_data_; }

void PublishPositionRelativeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PublishPositionRelativeResponse *>(to)->MergeFrom(
      static_cast<const PublishPositionRelativeResponse &>(from));
}


void PublishPositionRelativeResponse::MergeFrom(const PublishPositionRelativeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_landing_target_result()) {
    _internal_mutable_landing_target_result()->::mavsdk::rpc::landing_target::LandingTargetResult::MergeFrom(from._internal_landing_target_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PublishPositionRelativeResponse::CopyFrom(const PublishPositionRelativeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.landing_target.PublishPositionRelativeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishPositionRelativeResponse::IsInitialized() const {
  return true;
}

void PublishPositionRelativeResponse::InternalSwap(PublishPositionRelativeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(landing_target_result_, other->landing_target_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PublishPositionRelativeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_getter, &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_once,
      file_level_metadata_landing_5ftarget_2flanding_5ftarget_2eproto[2]);
}

// ===================================================================

class LandingTargetResult::_Internal {
 public:
};

LandingTargetResult::LandingTargetResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.landing_target.LandingTargetResult)
}
LandingTargetResult::LandingTargetResult(const LandingTargetResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    result_str_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result_str().empty()) {
    result_str_.Set(from._internal_result_str(), 
      GetArenaForAllocation());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.landing_target.LandingTargetResult)
}

inline void LandingTargetResult::SharedCtor() {
result_str_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  result_str_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
result_ = 0;
}

LandingTargetResult::~LandingTargetResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.landing_target.LandingTargetResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LandingTargetResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  result_str_.Destroy();
}

void LandingTargetResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LandingTargetResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.landing_target.LandingTargetResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmpty();
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LandingTargetResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.landing_target.LandingTargetResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::landing_target::LandingTargetResult_Result>(val));
        } else
          goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.landing_target.LandingTargetResult.result_str"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LandingTargetResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.landing_target.LandingTargetResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.landing_target.LandingTargetResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.landing_target.LandingTargetResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.landing_target.LandingTargetResult)
  return target;
}

size_t LandingTargetResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.landing_target.LandingTargetResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.landing_target.LandingTargetResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LandingTargetResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LandingTargetResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LandingTargetResult::GetClassData() const { return &_class_data_; }

void LandingTargetResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LandingTargetResult *>(to)->MergeFrom(
      static_cast<const LandingTargetResult &>(from));
}


void LandingTargetResult::MergeFrom(const LandingTargetResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.landing_target.LandingTargetResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LandingTargetResult::CopyFrom(const LandingTargetResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.landing_target.LandingTargetResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LandingTargetResult::IsInitialized() const {
  return true;
}

void LandingTargetResult::InternalSwap(LandingTargetResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &result_str_, lhs_arena,
      &other->result_str_, rhs_arena
  );
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LandingTargetResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_getter, &descriptor_table_landing_5ftarget_2flanding_5ftarget_2eproto_once,
      file_level_metadata_landing_5ftarget_2flanding_5ftarget_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace landing_target
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::landing_target::PositionLocal*
Arena::CreateMaybeMessage< ::mavsdk::rpc::landing_target::PositionLocal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::landing_target::PositionLocal >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::landing_target::PublishPositionRelativeRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::landing_target::PublishPositionRelativeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::landing_target::PublishPositionRelativeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::landing_target::PublishPositionRelativeResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::landing_target::PublishPositionRelativeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::landing_target::PublishPositionRelativeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::landing_target::LandingTargetResult*
Arena::CreateMaybeMessage< ::mavsdk::rpc::landing_target::LandingTargetResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::landing_target::LandingTargetResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
