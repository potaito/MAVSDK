// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: precision_target/precision_target.proto

#include "precision_target/precision_target.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mavsdk {
namespace rpc {
namespace precision_target {
PROTOBUF_CONSTEXPR PositionLocal::PositionLocal(
    ::_pbi::ConstantInitialized)
  : x_(0)
  , y_(0)
  , z_(0){}
struct PositionLocalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionLocalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionLocalDefaultTypeInternal() {}
  union {
    PositionLocal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionLocalDefaultTypeInternal _PositionLocal_default_instance_;
PROTOBUF_CONSTEXPR PublishPositionRelativeRequest::PublishPositionRelativeRequest(
    ::_pbi::ConstantInitialized)
  : position_local_(nullptr)
  , observation_frame_(0)
{}
struct PublishPositionRelativeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishPositionRelativeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishPositionRelativeRequestDefaultTypeInternal() {}
  union {
    PublishPositionRelativeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishPositionRelativeRequestDefaultTypeInternal _PublishPositionRelativeRequest_default_instance_;
PROTOBUF_CONSTEXPR PublishPositionRelativeResponse::PublishPositionRelativeResponse(
    ::_pbi::ConstantInitialized)
  : precision_target_result_(nullptr){}
struct PublishPositionRelativeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishPositionRelativeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishPositionRelativeResponseDefaultTypeInternal() {}
  union {
    PublishPositionRelativeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishPositionRelativeResponseDefaultTypeInternal _PublishPositionRelativeResponse_default_instance_;
PROTOBUF_CONSTEXPR PrecisionTargetResult::PrecisionTargetResult(
    ::_pbi::ConstantInitialized)
  : result_str_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , result_(0)
{}
struct PrecisionTargetResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrecisionTargetResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrecisionTargetResultDefaultTypeInternal() {}
  union {
    PrecisionTargetResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrecisionTargetResultDefaultTypeInternal _PrecisionTargetResult_default_instance_;
}  // namespace precision_target
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_precision_5ftarget_2fprecision_5ftarget_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_precision_5ftarget_2fprecision_5ftarget_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_precision_5ftarget_2fprecision_5ftarget_2eproto = nullptr;

const uint32_t TableStruct_precision_5ftarget_2fprecision_5ftarget_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PositionLocal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PositionLocal, x_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PositionLocal, y_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PositionLocal, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PublishPositionRelativeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PublishPositionRelativeRequest, position_local_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PublishPositionRelativeRequest, observation_frame_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PublishPositionRelativeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PublishPositionRelativeResponse, precision_target_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PrecisionTargetResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PrecisionTargetResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::precision_target::PrecisionTargetResult, result_str_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mavsdk::rpc::precision_target::PositionLocal)},
  { 9, -1, -1, sizeof(::mavsdk::rpc::precision_target::PublishPositionRelativeRequest)},
  { 17, -1, -1, sizeof(::mavsdk::rpc::precision_target::PublishPositionRelativeResponse)},
  { 24, -1, -1, sizeof(::mavsdk::rpc::precision_target::PrecisionTargetResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mavsdk::rpc::precision_target::_PositionLocal_default_instance_._instance,
  &::mavsdk::rpc::precision_target::_PublishPositionRelativeRequest_default_instance_._instance,
  &::mavsdk::rpc::precision_target::_PublishPositionRelativeResponse_default_instance_._instance,
  &::mavsdk::rpc::precision_target::_PrecisionTargetResult_default_instance_._instance,
};

const char descriptor_table_protodef_precision_5ftarget_2fprecision_5ftarget_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'precision_target/precision_target.prot"
  "o\022\033mavsdk.rpc.precision_target\032\024mavsdk_o"
  "ptions.proto\"0\n\rPositionLocal\022\t\n\001x\030\001 \001(\002"
  "\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"\256\001\n\036PublishPositi"
  "onRelativeRequest\022B\n\016position_local\030\001 \001("
  "\0132*.mavsdk.rpc.precision_target.Position"
  "Local\022H\n\021observation_frame\030\002 \001(\0162-.mavsd"
  "k.rpc.precision_target.ObservationFrame\""
  "v\n\037PublishPositionRelativeResponse\022S\n\027pr"
  "ecision_target_result\030\001 \001(\01322.mavsdk.rpc"
  ".precision_target.PrecisionTargetResult\""
  "\276\001\n\025PrecisionTargetResult\022I\n\006result\030\001 \001("
  "\01629.mavsdk.rpc.precision_target.Precisio"
  "nTargetResult.Result\022\022\n\nresult_str\030\002 \001(\t"
  "\"F\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT"
  "_SUCCESS\020\001\022\024\n\020RESULT_NO_SYSTEM\020\002*S\n\020Obse"
  "rvationFrame\022\037\n\033OBSERVATION_FRAME_LOCAL_"
  "NED\020\000\022\036\n\032OBSERVATION_FRAME_BODY_FRD\020\0012\265\001"
  "\n\026PrecisionTargetService\022\232\001\n\027PublishPosi"
  "tionRelative\022;.mavsdk.rpc.precision_targ"
  "et.PublishPositionRelativeRequest\032<.mavs"
  "dk.rpc.precision_target.PublishPositionR"
  "elativeResponse\"\004\200\265\030\001B2\n\032io.mavsdk.preci"
  "sion_targetB\024PrecisionTargetProtob\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_deps[1] = {
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::_pbi::once_flag descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto = {
    false, false, 961, descriptor_table_protodef_precision_5ftarget_2fprecision_5ftarget_2eproto,
    "precision_target/precision_target.proto",
    &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_once, descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_precision_5ftarget_2fprecision_5ftarget_2eproto::offsets,
    file_level_metadata_precision_5ftarget_2fprecision_5ftarget_2eproto, file_level_enum_descriptors_precision_5ftarget_2fprecision_5ftarget_2eproto,
    file_level_service_descriptors_precision_5ftarget_2fprecision_5ftarget_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_getter() {
  return &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_precision_5ftarget_2fprecision_5ftarget_2eproto(&descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto);
namespace mavsdk {
namespace rpc {
namespace precision_target {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrecisionTargetResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto);
  return file_level_enum_descriptors_precision_5ftarget_2fprecision_5ftarget_2eproto[0];
}
bool PrecisionTargetResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr PrecisionTargetResult_Result PrecisionTargetResult::RESULT_UNKNOWN;
constexpr PrecisionTargetResult_Result PrecisionTargetResult::RESULT_SUCCESS;
constexpr PrecisionTargetResult_Result PrecisionTargetResult::RESULT_NO_SYSTEM;
constexpr PrecisionTargetResult_Result PrecisionTargetResult::Result_MIN;
constexpr PrecisionTargetResult_Result PrecisionTargetResult::Result_MAX;
constexpr int PrecisionTargetResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObservationFrame_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto);
  return file_level_enum_descriptors_precision_5ftarget_2fprecision_5ftarget_2eproto[1];
}
bool ObservationFrame_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PositionLocal::_Internal {
 public:
};

PositionLocal::PositionLocal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.precision_target.PositionLocal)
}
PositionLocal::PositionLocal(const PositionLocal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.precision_target.PositionLocal)
}

inline void PositionLocal::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

PositionLocal::~PositionLocal() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.precision_target.PositionLocal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PositionLocal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PositionLocal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PositionLocal::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.precision_target.PositionLocal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PositionLocal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PositionLocal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.precision_target.PositionLocal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.precision_target.PositionLocal)
  return target;
}

size_t PositionLocal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.precision_target.PositionLocal)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PositionLocal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PositionLocal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PositionLocal::GetClassData() const { return &_class_data_; }

void PositionLocal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PositionLocal *>(to)->MergeFrom(
      static_cast<const PositionLocal &>(from));
}


void PositionLocal::MergeFrom(const PositionLocal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.precision_target.PositionLocal)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _internal_set_x(from._internal_x());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _internal_set_y(from._internal_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _internal_set_z(from._internal_z());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PositionLocal::CopyFrom(const PositionLocal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.precision_target.PositionLocal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionLocal::IsInitialized() const {
  return true;
}

void PositionLocal::InternalSwap(PositionLocal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionLocal, z_)
      + sizeof(PositionLocal::z_)
      - PROTOBUF_FIELD_OFFSET(PositionLocal, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PositionLocal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_getter, &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_once,
      file_level_metadata_precision_5ftarget_2fprecision_5ftarget_2eproto[0]);
}

// ===================================================================

class PublishPositionRelativeRequest::_Internal {
 public:
  static const ::mavsdk::rpc::precision_target::PositionLocal& position_local(const PublishPositionRelativeRequest* msg);
};

const ::mavsdk::rpc::precision_target::PositionLocal&
PublishPositionRelativeRequest::_Internal::position_local(const PublishPositionRelativeRequest* msg) {
  return *msg->position_local_;
}
PublishPositionRelativeRequest::PublishPositionRelativeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
}
PublishPositionRelativeRequest::PublishPositionRelativeRequest(const PublishPositionRelativeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position_local()) {
    position_local_ = new ::mavsdk::rpc::precision_target::PositionLocal(*from.position_local_);
  } else {
    position_local_ = nullptr;
  }
  observation_frame_ = from.observation_frame_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
}

inline void PublishPositionRelativeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&position_local_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&observation_frame_) -
    reinterpret_cast<char*>(&position_local_)) + sizeof(observation_frame_));
}

PublishPositionRelativeRequest::~PublishPositionRelativeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PublishPositionRelativeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete position_local_;
}

void PublishPositionRelativeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PublishPositionRelativeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && position_local_ != nullptr) {
    delete position_local_;
  }
  position_local_ = nullptr;
  observation_frame_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublishPositionRelativeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.precision_target.PositionLocal position_local = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position_local(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .mavsdk.rpc.precision_target.ObservationFrame observation_frame = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_observation_frame(static_cast<::mavsdk::rpc::precision_target::ObservationFrame>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PublishPositionRelativeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.precision_target.PositionLocal position_local = 1;
  if (this->_internal_has_position_local()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::position_local(this),
        _Internal::position_local(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.precision_target.ObservationFrame observation_frame = 2;
  if (this->_internal_observation_frame() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_observation_frame(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
  return target;
}

size_t PublishPositionRelativeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.precision_target.PositionLocal position_local = 1;
  if (this->_internal_has_position_local()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_local_);
  }

  // .mavsdk.rpc.precision_target.ObservationFrame observation_frame = 2;
  if (this->_internal_observation_frame() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_observation_frame());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PublishPositionRelativeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PublishPositionRelativeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PublishPositionRelativeRequest::GetClassData() const { return &_class_data_; }

void PublishPositionRelativeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PublishPositionRelativeRequest *>(to)->MergeFrom(
      static_cast<const PublishPositionRelativeRequest &>(from));
}


void PublishPositionRelativeRequest::MergeFrom(const PublishPositionRelativeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_position_local()) {
    _internal_mutable_position_local()->::mavsdk::rpc::precision_target::PositionLocal::MergeFrom(from._internal_position_local());
  }
  if (from._internal_observation_frame() != 0) {
    _internal_set_observation_frame(from._internal_observation_frame());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PublishPositionRelativeRequest::CopyFrom(const PublishPositionRelativeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishPositionRelativeRequest::IsInitialized() const {
  return true;
}

void PublishPositionRelativeRequest::InternalSwap(PublishPositionRelativeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PublishPositionRelativeRequest, observation_frame_)
      + sizeof(PublishPositionRelativeRequest::observation_frame_)
      - PROTOBUF_FIELD_OFFSET(PublishPositionRelativeRequest, position_local_)>(
          reinterpret_cast<char*>(&position_local_),
          reinterpret_cast<char*>(&other->position_local_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PublishPositionRelativeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_getter, &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_once,
      file_level_metadata_precision_5ftarget_2fprecision_5ftarget_2eproto[1]);
}

// ===================================================================

class PublishPositionRelativeResponse::_Internal {
 public:
  static const ::mavsdk::rpc::precision_target::PrecisionTargetResult& precision_target_result(const PublishPositionRelativeResponse* msg);
};

const ::mavsdk::rpc::precision_target::PrecisionTargetResult&
PublishPositionRelativeResponse::_Internal::precision_target_result(const PublishPositionRelativeResponse* msg) {
  return *msg->precision_target_result_;
}
PublishPositionRelativeResponse::PublishPositionRelativeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
}
PublishPositionRelativeResponse::PublishPositionRelativeResponse(const PublishPositionRelativeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_precision_target_result()) {
    precision_target_result_ = new ::mavsdk::rpc::precision_target::PrecisionTargetResult(*from.precision_target_result_);
  } else {
    precision_target_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
}

inline void PublishPositionRelativeResponse::SharedCtor() {
precision_target_result_ = nullptr;
}

PublishPositionRelativeResponse::~PublishPositionRelativeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PublishPositionRelativeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete precision_target_result_;
}

void PublishPositionRelativeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PublishPositionRelativeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && precision_target_result_ != nullptr) {
    delete precision_target_result_;
  }
  precision_target_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublishPositionRelativeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.precision_target.PrecisionTargetResult precision_target_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_precision_target_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PublishPositionRelativeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.precision_target.PrecisionTargetResult precision_target_result = 1;
  if (this->_internal_has_precision_target_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::precision_target_result(this),
        _Internal::precision_target_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
  return target;
}

size_t PublishPositionRelativeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.precision_target.PrecisionTargetResult precision_target_result = 1;
  if (this->_internal_has_precision_target_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *precision_target_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PublishPositionRelativeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PublishPositionRelativeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PublishPositionRelativeResponse::GetClassData() const { return &_class_data_; }

void PublishPositionRelativeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PublishPositionRelativeResponse *>(to)->MergeFrom(
      static_cast<const PublishPositionRelativeResponse &>(from));
}


void PublishPositionRelativeResponse::MergeFrom(const PublishPositionRelativeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_precision_target_result()) {
    _internal_mutable_precision_target_result()->::mavsdk::rpc::precision_target::PrecisionTargetResult::MergeFrom(from._internal_precision_target_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PublishPositionRelativeResponse::CopyFrom(const PublishPositionRelativeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishPositionRelativeResponse::IsInitialized() const {
  return true;
}

void PublishPositionRelativeResponse::InternalSwap(PublishPositionRelativeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(precision_target_result_, other->precision_target_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PublishPositionRelativeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_getter, &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_once,
      file_level_metadata_precision_5ftarget_2fprecision_5ftarget_2eproto[2]);
}

// ===================================================================

class PrecisionTargetResult::_Internal {
 public:
};

PrecisionTargetResult::PrecisionTargetResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.precision_target.PrecisionTargetResult)
}
PrecisionTargetResult::PrecisionTargetResult(const PrecisionTargetResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    result_str_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result_str().empty()) {
    result_str_.Set(from._internal_result_str(), 
      GetArenaForAllocation());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.precision_target.PrecisionTargetResult)
}

inline void PrecisionTargetResult::SharedCtor() {
result_str_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  result_str_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
result_ = 0;
}

PrecisionTargetResult::~PrecisionTargetResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.precision_target.PrecisionTargetResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PrecisionTargetResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  result_str_.Destroy();
}

void PrecisionTargetResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PrecisionTargetResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.precision_target.PrecisionTargetResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmpty();
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrecisionTargetResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.precision_target.PrecisionTargetResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::precision_target::PrecisionTargetResult_Result>(val));
        } else
          goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.precision_target.PrecisionTargetResult.result_str"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PrecisionTargetResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.precision_target.PrecisionTargetResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.precision_target.PrecisionTargetResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.precision_target.PrecisionTargetResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.precision_target.PrecisionTargetResult)
  return target;
}

size_t PrecisionTargetResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.precision_target.PrecisionTargetResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.precision_target.PrecisionTargetResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PrecisionTargetResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PrecisionTargetResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PrecisionTargetResult::GetClassData() const { return &_class_data_; }

void PrecisionTargetResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PrecisionTargetResult *>(to)->MergeFrom(
      static_cast<const PrecisionTargetResult &>(from));
}


void PrecisionTargetResult::MergeFrom(const PrecisionTargetResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.precision_target.PrecisionTargetResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PrecisionTargetResult::CopyFrom(const PrecisionTargetResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.precision_target.PrecisionTargetResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrecisionTargetResult::IsInitialized() const {
  return true;
}

void PrecisionTargetResult::InternalSwap(PrecisionTargetResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &result_str_, lhs_arena,
      &other->result_str_, rhs_arena
  );
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrecisionTargetResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_getter, &descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto_once,
      file_level_metadata_precision_5ftarget_2fprecision_5ftarget_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace precision_target
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::precision_target::PositionLocal*
Arena::CreateMaybeMessage< ::mavsdk::rpc::precision_target::PositionLocal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::precision_target::PositionLocal >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::precision_target::PublishPositionRelativeRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::precision_target::PublishPositionRelativeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::precision_target::PublishPositionRelativeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::precision_target::PublishPositionRelativeResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::precision_target::PublishPositionRelativeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::precision_target::PublishPositionRelativeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::precision_target::PrecisionTargetResult*
Arena::CreateMaybeMessage< ::mavsdk::rpc::precision_target::PrecisionTargetResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::precision_target::PrecisionTargetResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
