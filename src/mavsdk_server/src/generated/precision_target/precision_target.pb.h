// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: precision_target/precision_target.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_precision_5ftarget_2fprecision_5ftarget_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_precision_5ftarget_2fprecision_5ftarget_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_precision_5ftarget_2fprecision_5ftarget_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_precision_5ftarget_2fprecision_5ftarget_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_precision_5ftarget_2fprecision_5ftarget_2eproto;
namespace mavsdk {
namespace rpc {
namespace precision_target {
class PositionLocal;
struct PositionLocalDefaultTypeInternal;
extern PositionLocalDefaultTypeInternal _PositionLocal_default_instance_;
class PrecisionTargetResult;
struct PrecisionTargetResultDefaultTypeInternal;
extern PrecisionTargetResultDefaultTypeInternal _PrecisionTargetResult_default_instance_;
class PublishPositionRelativeRequest;
struct PublishPositionRelativeRequestDefaultTypeInternal;
extern PublishPositionRelativeRequestDefaultTypeInternal _PublishPositionRelativeRequest_default_instance_;
class PublishPositionRelativeResponse;
struct PublishPositionRelativeResponseDefaultTypeInternal;
extern PublishPositionRelativeResponseDefaultTypeInternal _PublishPositionRelativeResponse_default_instance_;
}  // namespace precision_target
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> ::mavsdk::rpc::precision_target::PositionLocal* Arena::CreateMaybeMessage<::mavsdk::rpc::precision_target::PositionLocal>(Arena*);
template<> ::mavsdk::rpc::precision_target::PrecisionTargetResult* Arena::CreateMaybeMessage<::mavsdk::rpc::precision_target::PrecisionTargetResult>(Arena*);
template<> ::mavsdk::rpc::precision_target::PublishPositionRelativeRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::precision_target::PublishPositionRelativeRequest>(Arena*);
template<> ::mavsdk::rpc::precision_target::PublishPositionRelativeResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::precision_target::PublishPositionRelativeResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mavsdk {
namespace rpc {
namespace precision_target {

enum PrecisionTargetResult_Result : int {
  PrecisionTargetResult_Result_RESULT_UNKNOWN = 0,
  PrecisionTargetResult_Result_RESULT_SUCCESS = 1,
  PrecisionTargetResult_Result_RESULT_NO_SYSTEM = 2,
  PrecisionTargetResult_Result_PrecisionTargetResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  PrecisionTargetResult_Result_PrecisionTargetResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool PrecisionTargetResult_Result_IsValid(int value);
constexpr PrecisionTargetResult_Result PrecisionTargetResult_Result_Result_MIN = PrecisionTargetResult_Result_RESULT_UNKNOWN;
constexpr PrecisionTargetResult_Result PrecisionTargetResult_Result_Result_MAX = PrecisionTargetResult_Result_RESULT_NO_SYSTEM;
constexpr int PrecisionTargetResult_Result_Result_ARRAYSIZE = PrecisionTargetResult_Result_Result_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrecisionTargetResult_Result_descriptor();
template<typename T>
inline const std::string& PrecisionTargetResult_Result_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PrecisionTargetResult_Result>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PrecisionTargetResult_Result_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PrecisionTargetResult_Result_descriptor(), enum_t_value);
}
inline bool PrecisionTargetResult_Result_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PrecisionTargetResult_Result* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PrecisionTargetResult_Result>(
    PrecisionTargetResult_Result_descriptor(), name, value);
}
// ===================================================================

class PositionLocal final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.precision_target.PositionLocal) */ {
 public:
  inline PositionLocal() : PositionLocal(nullptr) {}
  ~PositionLocal() override;
  explicit PROTOBUF_CONSTEXPR PositionLocal(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PositionLocal(const PositionLocal& from);
  PositionLocal(PositionLocal&& from) noexcept
    : PositionLocal() {
    *this = ::std::move(from);
  }

  inline PositionLocal& operator=(const PositionLocal& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionLocal& operator=(PositionLocal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PositionLocal& default_instance() {
    return *internal_default_instance();
  }
  static inline const PositionLocal* internal_default_instance() {
    return reinterpret_cast<const PositionLocal*>(
               &_PositionLocal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PositionLocal& a, PositionLocal& b) {
    a.Swap(&b);
  }
  inline void Swap(PositionLocal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionLocal* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PositionLocal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PositionLocal>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PositionLocal& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PositionLocal& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionLocal* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.precision_target.PositionLocal";
  }
  protected:
  explicit PositionLocal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.precision_target.PositionLocal)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float x_;
  float y_;
  float z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_precision_5ftarget_2fprecision_5ftarget_2eproto;
};
// -------------------------------------------------------------------

class PublishPositionRelativeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.precision_target.PublishPositionRelativeRequest) */ {
 public:
  inline PublishPositionRelativeRequest() : PublishPositionRelativeRequest(nullptr) {}
  ~PublishPositionRelativeRequest() override;
  explicit PROTOBUF_CONSTEXPR PublishPositionRelativeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PublishPositionRelativeRequest(const PublishPositionRelativeRequest& from);
  PublishPositionRelativeRequest(PublishPositionRelativeRequest&& from) noexcept
    : PublishPositionRelativeRequest() {
    *this = ::std::move(from);
  }

  inline PublishPositionRelativeRequest& operator=(const PublishPositionRelativeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishPositionRelativeRequest& operator=(PublishPositionRelativeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishPositionRelativeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PublishPositionRelativeRequest* internal_default_instance() {
    return reinterpret_cast<const PublishPositionRelativeRequest*>(
               &_PublishPositionRelativeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PublishPositionRelativeRequest& a, PublishPositionRelativeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PublishPositionRelativeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishPositionRelativeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishPositionRelativeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PublishPositionRelativeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PublishPositionRelativeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PublishPositionRelativeRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishPositionRelativeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.precision_target.PublishPositionRelativeRequest";
  }
  protected:
  explicit PublishPositionRelativeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionLocalFieldNumber = 1,
  };
  // .mavsdk.rpc.precision_target.PositionLocal position_local = 1;
  bool has_position_local() const;
  private:
  bool _internal_has_position_local() const;
  public:
  void clear_position_local();
  const ::mavsdk::rpc::precision_target::PositionLocal& position_local() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::precision_target::PositionLocal* release_position_local();
  ::mavsdk::rpc::precision_target::PositionLocal* mutable_position_local();
  void set_allocated_position_local(::mavsdk::rpc::precision_target::PositionLocal* position_local);
  private:
  const ::mavsdk::rpc::precision_target::PositionLocal& _internal_position_local() const;
  ::mavsdk::rpc::precision_target::PositionLocal* _internal_mutable_position_local();
  public:
  void unsafe_arena_set_allocated_position_local(
      ::mavsdk::rpc::precision_target::PositionLocal* position_local);
  ::mavsdk::rpc::precision_target::PositionLocal* unsafe_arena_release_position_local();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.precision_target.PublishPositionRelativeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::precision_target::PositionLocal* position_local_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_precision_5ftarget_2fprecision_5ftarget_2eproto;
};
// -------------------------------------------------------------------

class PublishPositionRelativeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.precision_target.PublishPositionRelativeResponse) */ {
 public:
  inline PublishPositionRelativeResponse() : PublishPositionRelativeResponse(nullptr) {}
  ~PublishPositionRelativeResponse() override;
  explicit PROTOBUF_CONSTEXPR PublishPositionRelativeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PublishPositionRelativeResponse(const PublishPositionRelativeResponse& from);
  PublishPositionRelativeResponse(PublishPositionRelativeResponse&& from) noexcept
    : PublishPositionRelativeResponse() {
    *this = ::std::move(from);
  }

  inline PublishPositionRelativeResponse& operator=(const PublishPositionRelativeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishPositionRelativeResponse& operator=(PublishPositionRelativeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishPositionRelativeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PublishPositionRelativeResponse* internal_default_instance() {
    return reinterpret_cast<const PublishPositionRelativeResponse*>(
               &_PublishPositionRelativeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PublishPositionRelativeResponse& a, PublishPositionRelativeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PublishPositionRelativeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishPositionRelativeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishPositionRelativeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PublishPositionRelativeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PublishPositionRelativeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PublishPositionRelativeResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishPositionRelativeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.precision_target.PublishPositionRelativeResponse";
  }
  protected:
  explicit PublishPositionRelativeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrecisionTargetResultFieldNumber = 1,
  };
  // .mavsdk.rpc.precision_target.PrecisionTargetResult precision_target_result = 1;
  bool has_precision_target_result() const;
  private:
  bool _internal_has_precision_target_result() const;
  public:
  void clear_precision_target_result();
  const ::mavsdk::rpc::precision_target::PrecisionTargetResult& precision_target_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::precision_target::PrecisionTargetResult* release_precision_target_result();
  ::mavsdk::rpc::precision_target::PrecisionTargetResult* mutable_precision_target_result();
  void set_allocated_precision_target_result(::mavsdk::rpc::precision_target::PrecisionTargetResult* precision_target_result);
  private:
  const ::mavsdk::rpc::precision_target::PrecisionTargetResult& _internal_precision_target_result() const;
  ::mavsdk::rpc::precision_target::PrecisionTargetResult* _internal_mutable_precision_target_result();
  public:
  void unsafe_arena_set_allocated_precision_target_result(
      ::mavsdk::rpc::precision_target::PrecisionTargetResult* precision_target_result);
  ::mavsdk::rpc::precision_target::PrecisionTargetResult* unsafe_arena_release_precision_target_result();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.precision_target.PublishPositionRelativeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::precision_target::PrecisionTargetResult* precision_target_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_precision_5ftarget_2fprecision_5ftarget_2eproto;
};
// -------------------------------------------------------------------

class PrecisionTargetResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.precision_target.PrecisionTargetResult) */ {
 public:
  inline PrecisionTargetResult() : PrecisionTargetResult(nullptr) {}
  ~PrecisionTargetResult() override;
  explicit PROTOBUF_CONSTEXPR PrecisionTargetResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PrecisionTargetResult(const PrecisionTargetResult& from);
  PrecisionTargetResult(PrecisionTargetResult&& from) noexcept
    : PrecisionTargetResult() {
    *this = ::std::move(from);
  }

  inline PrecisionTargetResult& operator=(const PrecisionTargetResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrecisionTargetResult& operator=(PrecisionTargetResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrecisionTargetResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrecisionTargetResult* internal_default_instance() {
    return reinterpret_cast<const PrecisionTargetResult*>(
               &_PrecisionTargetResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PrecisionTargetResult& a, PrecisionTargetResult& b) {
    a.Swap(&b);
  }
  inline void Swap(PrecisionTargetResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrecisionTargetResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrecisionTargetResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrecisionTargetResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PrecisionTargetResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PrecisionTargetResult& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrecisionTargetResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.precision_target.PrecisionTargetResult";
  }
  protected:
  explicit PrecisionTargetResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PrecisionTargetResult_Result Result;
  static constexpr Result RESULT_UNKNOWN =
    PrecisionTargetResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS =
    PrecisionTargetResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM =
    PrecisionTargetResult_Result_RESULT_NO_SYSTEM;
  static inline bool Result_IsValid(int value) {
    return PrecisionTargetResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN =
    PrecisionTargetResult_Result_Result_MIN;
  static constexpr Result Result_MAX =
    PrecisionTargetResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE =
    PrecisionTargetResult_Result_Result_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Result_descriptor() {
    return PrecisionTargetResult_Result_descriptor();
  }
  template<typename T>
  static inline const std::string& Result_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Result>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Result_Name.");
    return PrecisionTargetResult_Result_Name(enum_t_value);
  }
  static inline bool Result_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Result* value) {
    return PrecisionTargetResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str();
  const std::string& result_str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_result_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* result_str);
  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(const std::string& value);
  std::string* _internal_mutable_result_str();
  public:

  // .mavsdk.rpc.precision_target.PrecisionTargetResult.Result result = 1;
  void clear_result();
  ::mavsdk::rpc::precision_target::PrecisionTargetResult_Result result() const;
  void set_result(::mavsdk::rpc::precision_target::PrecisionTargetResult_Result value);
  private:
  ::mavsdk::rpc::precision_target::PrecisionTargetResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::precision_target::PrecisionTargetResult_Result value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.precision_target.PrecisionTargetResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_str_;
  int result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_precision_5ftarget_2fprecision_5ftarget_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PositionLocal

// float x = 1;
inline void PositionLocal::clear_x() {
  x_ = 0;
}
inline float PositionLocal::_internal_x() const {
  return x_;
}
inline float PositionLocal::x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.precision_target.PositionLocal.x)
  return _internal_x();
}
inline void PositionLocal::_internal_set_x(float value) {
  
  x_ = value;
}
inline void PositionLocal::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.precision_target.PositionLocal.x)
}

// float y = 2;
inline void PositionLocal::clear_y() {
  y_ = 0;
}
inline float PositionLocal::_internal_y() const {
  return y_;
}
inline float PositionLocal::y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.precision_target.PositionLocal.y)
  return _internal_y();
}
inline void PositionLocal::_internal_set_y(float value) {
  
  y_ = value;
}
inline void PositionLocal::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.precision_target.PositionLocal.y)
}

// float z = 3;
inline void PositionLocal::clear_z() {
  z_ = 0;
}
inline float PositionLocal::_internal_z() const {
  return z_;
}
inline float PositionLocal::z() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.precision_target.PositionLocal.z)
  return _internal_z();
}
inline void PositionLocal::_internal_set_z(float value) {
  
  z_ = value;
}
inline void PositionLocal::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.precision_target.PositionLocal.z)
}

// -------------------------------------------------------------------

// PublishPositionRelativeRequest

// .mavsdk.rpc.precision_target.PositionLocal position_local = 1;
inline bool PublishPositionRelativeRequest::_internal_has_position_local() const {
  return this != internal_default_instance() && position_local_ != nullptr;
}
inline bool PublishPositionRelativeRequest::has_position_local() const {
  return _internal_has_position_local();
}
inline void PublishPositionRelativeRequest::clear_position_local() {
  if (GetArenaForAllocation() == nullptr && position_local_ != nullptr) {
    delete position_local_;
  }
  position_local_ = nullptr;
}
inline const ::mavsdk::rpc::precision_target::PositionLocal& PublishPositionRelativeRequest::_internal_position_local() const {
  const ::mavsdk::rpc::precision_target::PositionLocal* p = position_local_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::precision_target::PositionLocal&>(
      ::mavsdk::rpc::precision_target::_PositionLocal_default_instance_);
}
inline const ::mavsdk::rpc::precision_target::PositionLocal& PublishPositionRelativeRequest::position_local() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.precision_target.PublishPositionRelativeRequest.position_local)
  return _internal_position_local();
}
inline void PublishPositionRelativeRequest::unsafe_arena_set_allocated_position_local(
    ::mavsdk::rpc::precision_target::PositionLocal* position_local) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_local_);
  }
  position_local_ = position_local;
  if (position_local) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.precision_target.PublishPositionRelativeRequest.position_local)
}
inline ::mavsdk::rpc::precision_target::PositionLocal* PublishPositionRelativeRequest::release_position_local() {
  
  ::mavsdk::rpc::precision_target::PositionLocal* temp = position_local_;
  position_local_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::precision_target::PositionLocal* PublishPositionRelativeRequest::unsafe_arena_release_position_local() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.precision_target.PublishPositionRelativeRequest.position_local)
  
  ::mavsdk::rpc::precision_target::PositionLocal* temp = position_local_;
  position_local_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::precision_target::PositionLocal* PublishPositionRelativeRequest::_internal_mutable_position_local() {
  
  if (position_local_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::precision_target::PositionLocal>(GetArenaForAllocation());
    position_local_ = p;
  }
  return position_local_;
}
inline ::mavsdk::rpc::precision_target::PositionLocal* PublishPositionRelativeRequest::mutable_position_local() {
  ::mavsdk::rpc::precision_target::PositionLocal* _msg = _internal_mutable_position_local();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.precision_target.PublishPositionRelativeRequest.position_local)
  return _msg;
}
inline void PublishPositionRelativeRequest::set_allocated_position_local(::mavsdk::rpc::precision_target::PositionLocal* position_local) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete position_local_;
  }
  if (position_local) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(position_local);
    if (message_arena != submessage_arena) {
      position_local = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position_local, submessage_arena);
    }
    
  } else {
    
  }
  position_local_ = position_local;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.precision_target.PublishPositionRelativeRequest.position_local)
}

// -------------------------------------------------------------------

// PublishPositionRelativeResponse

// .mavsdk.rpc.precision_target.PrecisionTargetResult precision_target_result = 1;
inline bool PublishPositionRelativeResponse::_internal_has_precision_target_result() const {
  return this != internal_default_instance() && precision_target_result_ != nullptr;
}
inline bool PublishPositionRelativeResponse::has_precision_target_result() const {
  return _internal_has_precision_target_result();
}
inline void PublishPositionRelativeResponse::clear_precision_target_result() {
  if (GetArenaForAllocation() == nullptr && precision_target_result_ != nullptr) {
    delete precision_target_result_;
  }
  precision_target_result_ = nullptr;
}
inline const ::mavsdk::rpc::precision_target::PrecisionTargetResult& PublishPositionRelativeResponse::_internal_precision_target_result() const {
  const ::mavsdk::rpc::precision_target::PrecisionTargetResult* p = precision_target_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::precision_target::PrecisionTargetResult&>(
      ::mavsdk::rpc::precision_target::_PrecisionTargetResult_default_instance_);
}
inline const ::mavsdk::rpc::precision_target::PrecisionTargetResult& PublishPositionRelativeResponse::precision_target_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.precision_target.PublishPositionRelativeResponse.precision_target_result)
  return _internal_precision_target_result();
}
inline void PublishPositionRelativeResponse::unsafe_arena_set_allocated_precision_target_result(
    ::mavsdk::rpc::precision_target::PrecisionTargetResult* precision_target_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(precision_target_result_);
  }
  precision_target_result_ = precision_target_result;
  if (precision_target_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.precision_target.PublishPositionRelativeResponse.precision_target_result)
}
inline ::mavsdk::rpc::precision_target::PrecisionTargetResult* PublishPositionRelativeResponse::release_precision_target_result() {
  
  ::mavsdk::rpc::precision_target::PrecisionTargetResult* temp = precision_target_result_;
  precision_target_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::precision_target::PrecisionTargetResult* PublishPositionRelativeResponse::unsafe_arena_release_precision_target_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.precision_target.PublishPositionRelativeResponse.precision_target_result)
  
  ::mavsdk::rpc::precision_target::PrecisionTargetResult* temp = precision_target_result_;
  precision_target_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::precision_target::PrecisionTargetResult* PublishPositionRelativeResponse::_internal_mutable_precision_target_result() {
  
  if (precision_target_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::precision_target::PrecisionTargetResult>(GetArenaForAllocation());
    precision_target_result_ = p;
  }
  return precision_target_result_;
}
inline ::mavsdk::rpc::precision_target::PrecisionTargetResult* PublishPositionRelativeResponse::mutable_precision_target_result() {
  ::mavsdk::rpc::precision_target::PrecisionTargetResult* _msg = _internal_mutable_precision_target_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.precision_target.PublishPositionRelativeResponse.precision_target_result)
  return _msg;
}
inline void PublishPositionRelativeResponse::set_allocated_precision_target_result(::mavsdk::rpc::precision_target::PrecisionTargetResult* precision_target_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete precision_target_result_;
  }
  if (precision_target_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(precision_target_result);
    if (message_arena != submessage_arena) {
      precision_target_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, precision_target_result, submessage_arena);
    }
    
  } else {
    
  }
  precision_target_result_ = precision_target_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.precision_target.PublishPositionRelativeResponse.precision_target_result)
}

// -------------------------------------------------------------------

// PrecisionTargetResult

// .mavsdk.rpc.precision_target.PrecisionTargetResult.Result result = 1;
inline void PrecisionTargetResult::clear_result() {
  result_ = 0;
}
inline ::mavsdk::rpc::precision_target::PrecisionTargetResult_Result PrecisionTargetResult::_internal_result() const {
  return static_cast< ::mavsdk::rpc::precision_target::PrecisionTargetResult_Result >(result_);
}
inline ::mavsdk::rpc::precision_target::PrecisionTargetResult_Result PrecisionTargetResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.precision_target.PrecisionTargetResult.result)
  return _internal_result();
}
inline void PrecisionTargetResult::_internal_set_result(::mavsdk::rpc::precision_target::PrecisionTargetResult_Result value) {
  
  result_ = value;
}
inline void PrecisionTargetResult::set_result(::mavsdk::rpc::precision_target::PrecisionTargetResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.precision_target.PrecisionTargetResult.result)
}

// string result_str = 2;
inline void PrecisionTargetResult::clear_result_str() {
  result_str_.ClearToEmpty();
}
inline const std::string& PrecisionTargetResult::result_str() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.precision_target.PrecisionTargetResult.result_str)
  return _internal_result_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PrecisionTargetResult::set_result_str(ArgT0&& arg0, ArgT... args) {
 
 result_str_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.precision_target.PrecisionTargetResult.result_str)
}
inline std::string* PrecisionTargetResult::mutable_result_str() {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.precision_target.PrecisionTargetResult.result_str)
  return _s;
}
inline const std::string& PrecisionTargetResult::_internal_result_str() const {
  return result_str_.Get();
}
inline void PrecisionTargetResult::_internal_set_result_str(const std::string& value) {
  
  result_str_.Set(value, GetArenaForAllocation());
}
inline std::string* PrecisionTargetResult::_internal_mutable_result_str() {
  
  return result_str_.Mutable(GetArenaForAllocation());
}
inline std::string* PrecisionTargetResult::release_result_str() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.precision_target.PrecisionTargetResult.result_str)
  return result_str_.Release();
}
inline void PrecisionTargetResult::set_allocated_result_str(std::string* result_str) {
  if (result_str != nullptr) {
    
  } else {
    
  }
  result_str_.SetAllocated(result_str, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (result_str_.IsDefault()) {
    result_str_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.precision_target.PrecisionTargetResult.result_str)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace precision_target
}  // namespace rpc
}  // namespace mavsdk

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::mavsdk::rpc::precision_target::PrecisionTargetResult_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::precision_target::PrecisionTargetResult_Result>() {
  return ::mavsdk::rpc::precision_target::PrecisionTargetResult_Result_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_precision_5ftarget_2fprecision_5ftarget_2eproto
